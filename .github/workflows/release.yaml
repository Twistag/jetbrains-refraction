# Name of our action
name: Release

# The event that will trigger the action
on:
  push:
    branches:
      - main

# what the action will do
jobs:
  release:
    # The operating system it will run on
    runs-on: ubuntu-latest

    # This check needs to be in place to prevent a publish loop with auto and github actions
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"

    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      HUSKY: 0

    # The list of steps that the action will go through
    steps:
      # Checks-out your repo so your workflow can access it.
      - uses: actions/checkout@v3

      # Fetch repo with tags, converting from shallow to complete
      - name: Prepare repository
        run: git fetch --unshallow --tags

      # Download Java
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      # Build a package
      - name: Build
        run: ./gradlew build

      # Publish a package
      - name: Publish
        run: ./gradlew publishPlugin -P intellijPublishToken=${{ env.publish-token }}
